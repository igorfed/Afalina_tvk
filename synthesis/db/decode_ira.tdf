--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone III" LPM_DECODES=8 LPM_WIDTH=3 data enable eq
--VERSION_BEGIN 7.2 cbx_cycloneii 2007:06:13:15:47:32:SJ cbx_lpm_add_sub 2007:08:06:16:01:34:SJ cbx_lpm_compare 2007:06:21:15:54:06:SJ cbx_lpm_decode 2007:03:12:19:01:52:SJ cbx_mgl 2007:08:03:15:48:12:SJ cbx_stratix 2007:05:02:16:27:14:SJ cbx_stratixii 2007:06:28:17:26:26:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 8 
SUBDESIGN decode_ira
( 
	data[2..0]	:	input;
	enable	:	input;
	eq[7..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[7..0]	: WIRE;
	eq_wire[7..0]	: WIRE;
	w_anode3403w[3..0]	: WIRE;
	w_anode3420w[3..0]	: WIRE;
	w_anode3430w[3..0]	: WIRE;
	w_anode3440w[3..0]	: WIRE;
	w_anode3450w[3..0]	: WIRE;
	w_anode3460w[3..0]	: WIRE;
	w_anode3470w[3..0]	: WIRE;
	w_anode3480w[3..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[7..0] = eq_wire[7..0];
	eq_wire[] = ( w_anode3480w[3..3], w_anode3470w[3..3], w_anode3460w[3..3], w_anode3450w[3..3], w_anode3440w[3..3], w_anode3430w[3..3], w_anode3420w[3..3], w_anode3403w[3..3]);
	w_anode3403w[] = ( (w_anode3403w[2..2] & (! data_wire[2..2])), (w_anode3403w[1..1] & (! data_wire[1..1])), (w_anode3403w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode3420w[] = ( (w_anode3420w[2..2] & (! data_wire[2..2])), (w_anode3420w[1..1] & (! data_wire[1..1])), (w_anode3420w[0..0] & data_wire[0..0]), enable_wire);
	w_anode3430w[] = ( (w_anode3430w[2..2] & (! data_wire[2..2])), (w_anode3430w[1..1] & data_wire[1..1]), (w_anode3430w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode3440w[] = ( (w_anode3440w[2..2] & (! data_wire[2..2])), (w_anode3440w[1..1] & data_wire[1..1]), (w_anode3440w[0..0] & data_wire[0..0]), enable_wire);
	w_anode3450w[] = ( (w_anode3450w[2..2] & data_wire[2..2]), (w_anode3450w[1..1] & (! data_wire[1..1])), (w_anode3450w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode3460w[] = ( (w_anode3460w[2..2] & data_wire[2..2]), (w_anode3460w[1..1] & (! data_wire[1..1])), (w_anode3460w[0..0] & data_wire[0..0]), enable_wire);
	w_anode3470w[] = ( (w_anode3470w[2..2] & data_wire[2..2]), (w_anode3470w[1..1] & data_wire[1..1]), (w_anode3470w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode3480w[] = ( (w_anode3480w[2..2] & data_wire[2..2]), (w_anode3480w[1..1] & data_wire[1..1]), (w_anode3480w[0..0] & data_wire[0..0]), enable_wire);
END;
--VALID FILE
