--altdpram CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone III" INDATA_REG="INCLOCK" LPM_FILE="RAM.MIF" NUMWORDS=256 OUTDATA_REG="UNREGISTERED" RDADDRESS_REG="OUTCLOCK" RDCONTROL_REG="UNREGISTERED" WIDTH=8 WIDTHAD=8 WRADDRESS_REG="INCLOCK" WRCONTROL_REG="INCLOCK" data inclock inclocken outclock q rdaddress wraddress wren CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 7.2 cbx_altdpram 2007:04:25:14:55:30:SJ cbx_altsyncram 2007:08:27:07:35:30:SJ cbx_cycloneii 2007:06:13:15:47:32:SJ cbx_lpm_add_sub 2007:08:06:16:01:34:SJ cbx_lpm_compare 2007:06:21:15:54:06:SJ cbx_lpm_decode 2007:03:12:19:01:52:SJ cbx_lpm_mux 2007:05:11:14:07:38:SJ cbx_mgl 2007:08:03:15:48:12:SJ cbx_stratix 2007:05:02:16:27:14:SJ cbx_stratixii 2007:06:28:17:26:26:SJ cbx_stratixiii 2007:06:28:17:15:56:SJ cbx_util_mgl 2007:06:01:06:37:30:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION altsyncram_avr1 (address_a[7..0], address_b[7..0], clock0, clock1, clocken0, data_a[7..0], wren_a)
RETURNS ( q_b[7..0]);

--synthesis_resources = M9K 1 
SUBDESIGN dpram_0481
( 
	data[7..0]	:	input;
	inclock	:	input;
	inclocken	:	input;
	outclock	:	input;
	q[7..0]	:	output;
	rdaddress[7..0]	:	input;
	wraddress[7..0]	:	input;
	wren	:	input;
) 
VARIABLE 
	altsyncram1 : altsyncram_avr1;

BEGIN 
	altsyncram1.address_a[] = wraddress[];
	altsyncram1.address_b[] = rdaddress[];
	altsyncram1.clock0 = inclock;
	altsyncram1.clock1 = outclock;
	altsyncram1.clocken0 = inclocken;
	altsyncram1.data_a[] = data[];
	altsyncram1.wren_a = wren;
	q[] = altsyncram1.q_b[];
	ASSERT (0) 
	REPORT "ALTDPRAM doesn't support Stratix. Trying for best case memory conversions. The power up states will be different for stratix as well as read during write modes"
	SEVERITY WARNING;
END;
--VALID FILE
